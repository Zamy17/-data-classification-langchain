# -*- coding: utf-8 -*-
"""SDI DATA SESSION 2 - M ZAM ZAMI

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14lglQfAzXOX9IqNeetjRNBfy0-CbdSzy
"""

!pip install langchain_community
!pip install replicate

import os
from google.colab import userdata

# Put token to env variable
api_token = userdata.get('api_token')
os.environ['REPLICATE_API_TOKEN'] = api_token

from langchain_community.llms import Replicate

# Define the model
llm = Replicate(
  model="ibm-granite/granite-3.3-8b-instruct",
)

#talk with the LLM
ai_output = llm.invoke("create flappy bird game")
print(ai_output)

list_1 = [3,5,9,3,6,8]

for i in list_1:
  print("sekarang angkanya adalah:",i*4)

customer_reviews = [
"The battery lasts all day, and the performance is excellent.",
"The screen is too dim outdoors, but I love the colors indoors.",
"This phone is slow and keeps crashing when I open certain apps."
]

for review in customer_reviews:
  print("Review:", review)

  prompt = f"""
  Classify this review as Positive, Negative, Mixed. Respond with label only.
  {review}
  """
  print("Prompt:", prompt)

  ai_output = llm.invoke(prompt)
  print("AI Output:", ai_output)

  print("----------------------------------")
  print()

print(review)

data = [
    "With millions of fans watching his every move as IShowSpeed, Darren Watkins Jr. has made a name for himself as a streamer. At just 19 years old, his online presence is growing rapidly.",
    "Known for his lightning-fast footwork on the field, Antony Mateus plays professionally as a football player. He's 25, and already considered one of the rising stars in his league.",
    "The name Barack Obama is etched in history. Now 63, the former president continues to inspire through his speeches and books.",
    "After years behind bars, Lucia is back on the streets of Vice City at 29. She is ready to reclaim her life, navigating crime and chaos as a fierce criminal in the heart of GTA 6.",
    "Selling out stadiums across the world, Taylor Swift is far more than just a 34-year-old singer. Her influence spans music, fashion, and culture."
]

for row in data:
  print("Row:", row)

  prompt = f"""
  anPlease extract the data d get name, age, and job. output in json
  {row}
  """
  print("Prompt:", prompt)

  ai_output = llm.invoke(prompt)
  print("AI Output:", ai_output)

  print("----------------------------------")
  print()

from langchain_community.llms import Replicate

# Define parameters
parameters = {
  "top_k": 5,
  "top_p": 1.0,
  "max_tokens": 4096,
  "min_tokens": 0,
  "random_seed": None,
  "repetition_penalty": 1.0,
  "temperature": 0.7,
  "stopping_criteria": "length (256 tokens)",
  "stopping_sequence": None
}

# Define the model
llm = Replicate(
  model="ibm-granite/granite-3.3-8b-instruct",
  input=parameters
)

from google.colab import drive
drive.mount('/content/drive')

llm.invoke("what is the meaning of life")

llm.invoke("what is the meaning of life")



!pip install pandas
!pip install -U langchain langchain-community langchain-experimental replicate

import pandas as pd
import zipfile

with zipfile.ZipFile("archive.zip") as z:
    with z.open("personality_dataset.csv") as f:
        df = pd.read_csv(f)

# Tampilkan 20 baris pertama dengan index mulai dari 1
df.head(20).reset_index(drop=True).rename_axis('No').reset_index()

from langchain_experimental.agents.agent_toolkits.pandas.base import (
    create_pandas_dataframe_agent
)

agent = create_pandas_dataframe_agent(
    llm=llm,
    df=df,
    verbose=True,
    allow_dangerous_code=True,  # opt-in for Python REPL execution
)

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Asumsi df sudah dimuat
# Cek kolom yang tersedia dulu (opsional)
print(df.columns)

# Filter data berdasarkan kepribadian
introverts = df[df['Personality'] == 'Introvert']
extroverts = df[df['Personality'] == 'Extrovert']

# Hitung rata-rata waktu sendirian
avg_alone_intro = introverts['Time_spent_Alone'].mean()
avg_alone_extro = extroverts['Time_spent_Alone'].mean()

# Buat bar chart
plt.figure(figsize=(8, 6))
sns.barplot(x=['Introvert', 'Extrovert'], y=[avg_alone_intro, avg_alone_extro], palette='pastel')
plt.title('Rata-rata Waktu Sendiri: Introvert vs Extrovert')
plt.xlabel('Kepribadian')
plt.ylabel('Jam Sendiri (rata-rata)')
plt.ylim(0, max(avg_alone_intro, avg_alone_extro) + 1)
plt.show()







